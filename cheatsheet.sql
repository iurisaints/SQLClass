DML:

CRIAR:
CREATE DATABASE Teste;

CREATE TABLE Compras{
    -- ATRIBUTOS --
};

CREATE VIEW nome_view SELECT -- LÓGICA DO SELECT --

DELETAR:
DROP DATABASE Teste; -- ELIMINA UM BANCO DE DADOS INTEIRO --
DROP TABLE Compras; -- EXCLUI A TABELA ALVO --

ALTERAR:
ALTER TABLE ADD  -- ADICIONAR UMA COLUNA NA TABELA -- 
ALTER TABLE DROP -- EXCLUIR UMA COLUNA NA TABELA --

DDL:

CRIAR (CREATE) === INSERIR:
INSERT INTO (atributos) VALUES (parâmetros);
-- INSERIR DADOS DENTRO DE UMA TABELA --

LER (READ) === SELECIONAR:
SELECT * FROM Compras;
-- LER/PRINTAR DADOS DE UMA TABELA --

ATUALIZAR === UPDATE:
UPDATE nome_tabela SET coluna1 = valor1, coluna2 = valor2 WHERE condição;
-- ATUALIZAR DADOS DE UMA TABELA --

DELETAR === DELETE:
DELETE FROM nome_tabela WHERE condição;
-- DELETAR DADOS DE UMA TABELA --

SELECT COUNT(coluna) FROM tabela WHERE condição;
-- CONTA QUANTAS COLUNAS QUE EXISTEM NA TABELA COM A CONDIÇÃO --

SELECT SUM(coluna) FROM tabela WHERE condição;
-- SOMA TODAS AS COLUNAS QUE EXISTEM NA TABELA COM A CONDIÇÃO --

SELECT AVG(coluna) FROM tabela WHERE condição;
-- FAZ A MÉDIA DE TODAS AS COLUNAS QUE EXISTEM NA TABELA COM A CONDIÇÃO --

SELECT MIN(coluna) FROM tabela WHERE condição;
-- MOSTRA O VALOR MÍNIMO EM RELAÇÃO A TODAS AS COLUNAS --
-- QUE EXISTEM NA TABELA COM A CONDIÇÃO --

SELECT MAX(coluna) FROM tabela WHERE condição;
-- MOSTRA O VALOR MÁXIMO EM RELAÇÃO A TODAS AS COLUNAS --
-- QUE EXISTEM NA TABELA COM A CONDIÇÃO --


AGRUPAMENTO:
SELECT coluna1, coluna2, funcao_agregacao(coluna)
FROM tabela
GROUP BY coluna1, coluna2;

ORDENAÇÃO:
SELECT coluna1, coluna2
FROM tabela
ORDER BY coluna1 ASC|DESC, coluna2 ASC|DESC;

UNIÃO:

SELECT coluna1, coluna2 FROM tabela1
UNION
SELECT coluna1, coluna2 FROM tabela2;

-- COMBINAÇÃO DE RESULTADO DE DUAS TABELAS OU MAIS --

NECESSARIO TER A MESMA ESTRUTURA DE TABELA{
EXCETO:

SELECT coluna1, coluna2 FROM tabela1
EXCEPT
SELECT coluna1, coluna2 FROM tabela2;

-- REGISTROS DA PRIMEIRA CONSULTA QUE NÃO ESTÃO NA SEGUNDA -- 

INTERSECÇÃO:

SELECT coluna1, coluna2 FROM tabela1
INTERSECT
SELECT coluna1, coluna2 FROM tabela2;

-- RETORNA OS REGISTROS QUE SÃO IGUAIS NAS DUAS TABELAS --

}
